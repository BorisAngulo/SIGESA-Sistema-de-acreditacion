# Script de instalaci√≥n SIGESA para PowerShell
Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host " SIGESA - Instalaci√≥n Autom√°tica" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Verificar si Docker est√° instalado
try {
    $dockerVersion = docker --version 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Docker est√° instalado: $dockerVersion" -ForegroundColor Green
    } else {
        throw "Docker no encontrado"
    }
} catch {
    Write-Host "‚ùå Error: Docker no est√° instalado" -ForegroundColor Red
    Write-Host ""
    Write-Host "Por favor instala Docker Desktop desde:" -ForegroundColor Yellow
    Write-Host "https://www.docker.com/products/docker-desktop/" -ForegroundColor Blue
    Read-Host "Presiona Enter para continuar"
    exit 1
}

# Verificar si Docker est√° corriendo
try {
    docker info 2>$null | Out-Null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Docker est√° corriendo" -ForegroundColor Green
    } else {
        throw "Docker no est√° corriendo"
    }
} catch {
    Write-Host "‚ùå Error: Docker no est√° corriendo" -ForegroundColor Red
    Write-Host ""
    Write-Host "Por favor inicia Docker Desktop e intenta de nuevo" -ForegroundColor Yellow
    Read-Host "Presiona Enter para continuar"
    exit 1
}

# Verificar/crear archivo .env
if (-not (Test-Path ".env")) {
    Write-Host ""
    Write-Host "üìã Creando archivo de configuraci√≥n..." -ForegroundColor Yellow
    if (Test-Path ".env.example") {
        Copy-Item ".env.example" ".env"
        Write-Host "‚úÖ Archivo .env creado desde .env.example" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Error: No se encontr√≥ .env.example" -ForegroundColor Red
        Read-Host "Presiona Enter para continuar"
        exit 1
    }
} else {
    Write-Host "‚úÖ Archivo .env ya existe" -ForegroundColor Green
}

Write-Host ""
Write-Host "üöÄ Iniciando servicios de SIGESA..." -ForegroundColor Blue
Write-Host ""

# Iniciar servicios con docker-compose
try {
    docker-compose -f docker-compose.dev.yml up -d
    if ($LASTEXITCODE -ne 0) {
        throw "Error al iniciar servicios"
    }
} catch {
    Write-Host ""
    Write-Host "‚ùå Error al iniciar los servicios" -ForegroundColor Red
    Write-Host "Revisa los logs con: docker-compose -f docker-compose.dev.yml logs" -ForegroundColor Yellow
    Read-Host "Presiona Enter para continuar"
    exit 1
}

Write-Host ""
Write-Host "‚è≥ Esperando que los servicios est√©n listos..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

Write-Host ""
Write-Host "üóÑÔ∏è Configurando base de datos..." -ForegroundColor Blue

# Generar clave de aplicaci√≥n si no existe
$envContent = Get-Content ".env" -Raw
if ($envContent -notmatch "APP_KEY=base64:") {
    Write-Host "üîë Generando clave de aplicaci√≥n..." -ForegroundColor Yellow
    docker exec sigesa_backend php artisan key:generate --force
}

# Ejecutar migraciones
Write-Host "üìä Ejecutando migraciones..." -ForegroundColor Yellow
try {
    docker exec sigesa_backend php artisan migrate --force
} catch {
    Write-Host "‚ö†Ô∏è Error en migraciones, pero continuando..." -ForegroundColor Orange
}

# Ejecutar seeders
Write-Host "üå± Poblando base de datos con datos iniciales..." -ForegroundColor Yellow
try {
    docker exec sigesa_backend php artisan db:seed --force
} catch {
    Write-Host "‚ö†Ô∏è Error en seeders, pero continuando..." -ForegroundColor Orange
}

Write-Host ""
Write-Host "‚úÖ INSTALACI√ìN COMPLETADA" -ForegroundColor Green
Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host " üåê ACCESO A LA APLICACI√ìN" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "Frontend (React):     http://localhost:3000" -ForegroundColor Blue
Write-Host "Backend API:          http://localhost:8000" -ForegroundColor Blue
Write-Host "API Documentation:    http://localhost:8000/api/documentation" -ForegroundColor Blue
Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host " üõ†Ô∏è COMANDOS √öTILES" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "Ver estado:           docker ps" -ForegroundColor Gray
Write-Host "Parar servicios:     docker-compose -f docker-compose.dev.yml down" -ForegroundColor Gray
Write-Host "Ver logs backend:     docker logs sigesa_backend" -ForegroundColor Gray
Write-Host "Ver logs frontend:    docker logs sigesa_frontend-1" -ForegroundColor Gray
Write-Host ""

$openBrowser = Read-Host "¬øDeseas abrir el navegador? (s/n)"
if ($openBrowser -eq "s" -or $openBrowser -eq "S" -or $openBrowser -eq "") {
    Start-Process "http://localhost:3000"
}

Write-Host ""
Write-Host "¬°Disfruta usando SIGESA! üéâ" -ForegroundColor Green